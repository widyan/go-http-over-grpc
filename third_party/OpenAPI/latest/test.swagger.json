{
  "swagger": "2.0",
  "info": {
    "title": "latest/test.proto",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "Test"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/test": {
      "post": {
        "summary": "Test API",
        "description": "Test API",
        "operationId": "Test_TestService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoTestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoTestRequest"
            }
          }
        ],
        "tags": [
          "Test"
        ]
      }
    },
    "/api/v1/test/{userID}": {
      "get": {
        "summary": "Test API",
        "description": "Test API",
        "operationId": "Test_TestServiceWithParam",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoTestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userID",
            "description": "string userID = 2 [(validate.rules).string.email = true];",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Test"
        ]
      }
    }
  },
  "definitions": {
    "protoTestRequest": {
      "type": "object",
      "properties": {
        "userID": {
          "type": "string",
          "title": "string userID = 2 [(validate.rules).string.email = true];"
        }
      }
    },
    "protoTestResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "GO gRPC-gateway repository",
    "url": "https://github.com/widyan/go-http-over-grpc"
  }
}
