syntax="proto3";

package proto;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

//option go_package = "./v1;pb";
option go_package = "github.com/widyan/go-http-over-grpc/proto/latest;proto";

// These annotations are used when generating the OpenAPI file.
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    version: "1.0";
  };
  external_docs: {
    url: "https://github.com/widyan/go-http-over-grpc";
    description: "GO gRPC-gateway repository";
  }
  schemes: HTTPS;
};

message  TestRequest{
  // string userID = 2 [(validate.rules).string.email = true];
  string userID = 1 [(validate.rules).string = {
    min_len: 1,
 }];
}
message  TestResponse{
  string  status = 1;
}

service Test{
  rpc TestService(TestRequest) returns (TestResponse) {
    option (google.api.http) = {
      post: "/api/v1/test",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Test API"
      description: "Test API"
      tags: "Test"
    };
  };

  rpc TestServiceWithParam(TestRequest)returns(TestResponse){
    option (google.api.http) = {
      get: "/api/v1/test/{userID}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Test API"
      description: "Test API"
      tags: "Test"
    };
  }
}